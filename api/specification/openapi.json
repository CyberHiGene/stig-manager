{
  "openapi": "3.0.1",
  "info": {
    "title": "STIG Management API",
    "description": "An API for managing evaluations of Security Technical Implementation Guide (STIG) assessments.",
    "contact": {
      "name": "Carl Smigielski",
      "email": "carl.smigielski.ctr@navy.mil"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:50112/stig-manager/api"
    }
  ],
  "paths": {
    "/version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Return version information",
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "Version response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiVersion"
                }
              }
            }
          }
        }
      }
    },
    "/benchmarks": {
      "get": {
        "tags": [
          "Benchmark"
        ],
        "summary": "Return a list of available Benchmarks",
        "operationId": "getBenchmarks",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "A string found anywhere in a STIG title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "software",
            "in": "query",
            "description": "A software target of evaluation (TOE). Multiple values are OR'd.",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "software-url",
            "in": "query",
            "description": "An API endpoint that produces a list of software TOEs",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "os",
            "in": "query",
            "description": "An operating system TOE",
            "schema": {
              "type": "string",
              "enum": [
                "windows",
                "linux",
                "macos",
                "ios",
                "android",
                "other",
                "none"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Benchmark response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Benchmark"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Benchmark"
        ],
        "summary": "Import a new Benchmark",
        "operationId": "addBenchmark",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "An XCCDF file",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The added Benchmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Benchmark"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig"
            ]
          }
        ],
        "x-rbac": [
          "admin"
        ]
      }
    },
    "/benchmarks/{benchmarkId}": {
      "get": {
        "tags": [
          "Benchmark"
        ],
        "summary": "Return properties of the specified Benchmark",
        "operationId": "getBenchmarkById",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Benchmark response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Benchmark"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Benchmark"
        ],
        "summary": "Deletes a Benchmark (*** and all revisions ***)",
        "operationId": "deleteBenchmarkById",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted Benchmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Benchmark"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig"
            ]
          }
        ],
        "x-rbac": [
          "admin"
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions": {
      "get": {
        "tags": [
          "Revision"
        ],
        "summary": "Return a list of revisions for the specified Benchmark",
        "operationId": "getRevisionsByBenchmarkId",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revision response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Revision"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions/{revisionStr}": {
      "get": {
        "tags": [
          "Revision"
        ],
        "summary": "Return metadata for the specified revision of a Benchmark",
        "operationId": "getRevisionByString",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Revision response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Revision"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Revision"
        ],
        "summary": "Deletes the specified revision of a Benchmark",
        "operationId": "deleteRevisionByString",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The deleted Revision",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Revision"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig"
            ]
          }
        ],
        "x-rbac": [
          "admin"
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions/{revisionStr}/groups": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Return the list of groups for the specified revision of a Benchmark.",
        "description": "Can optionally specify profile filters.",
        "operationId": "getGroupsByRevision",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "Filter by profile",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MAC-1_Classified",
                  "MAC-1_Sensitive",
                  "MAC-1_Public",
                  "MAC-2_Classified",
                  "MAC-2_Sensitive",
                  "MAC-2_Public",
                  "MAC-3_Classified",
                  "MAC-3_Sensitive",
                  "MAC-3_Public"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupList"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions/{revisionStr}/groups/{groupId}": {
      "get": {
        "tags": [
          "Group"
        ],
        "summary": "Return the rules, checks and fixes for a Group from a specified revision of a Benchmark.",
        "description": "None",
        "operationId": "getGroupByRevision",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "A path parameter that indentifies a Group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupObj"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions/{revisionStr}/rules": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "Return rule data for the specified revision of a Benchmark.",
        "description": "Can optionally specify profile filters.",
        "operationId": "getRulesByRevision",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          },
          {
            "name": "profile",
            "in": "query",
            "description": "Filter by profile",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MAC-1_Classified",
                  "MAC-1_Sensitive",
                  "MAC-1_Public",
                  "MAC-2_Classified",
                  "MAC-2_Sensitive",
                  "MAC-2_Public",
                  "MAC-3_Classified",
                  "MAC-3_Sensitive",
                  "MAC-3_Public"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rule"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/rules/{ruleId}": {
      "get": {
        "tags": [
          "Rule"
        ],
        "summary": "Return the defintion and associated checks and fixes for the specified Rule",
        "operationId": "getRuleByRuleId",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "A path parameter that indentifies a Rule",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/{benchmarkId}/revisions/{revisionStr}/ccis": {
      "get": {
        "tags": [
          "CCI"
        ],
        "summary": "Return a list of CCIs from a Benchmark revision",
        "operationId": "getCcisByRevision",
        "parameters": [
          {
            "name": "benchmarkId",
            "in": "path",
            "description": "A path parameter that indentifies a STIG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionStr",
            "in": "path",
            "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
            "required": true,
            "schema": {
              "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CCI response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CciListItem"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    },
    "/benchmarks/ccis/{cci}": {
      "get": {
        "tags": [
          "CCI"
        ],
        "summary": "Return data for the specified CCI",
        "operationId": "getCci",
        "parameters": [
          {
            "name": "cci",
            "in": "path",
            "description": "A path parameter that indentifies a CCI",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "CCI response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cci"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth": [
              "stig-manager:stig:read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Benchmark": {
        "required": [
          "benchmarkId"
        ],
        "type": "object",
        "properties": {
          "benchmarkId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "lastRevisionStr": {
            "type": "string"
          },
          "lastRevisionDate": {
            "type": "string"
          }
        }
      },
      "Revision": {
        "type": "object",
        "properties": {
          "benchmarkId": {
            "type": "string"
          },
          "revisionStr": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "benchmarkDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDate": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "GroupList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "groupId": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "rules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RuleAbbr"
              }
            }
          }
        }
      },
      "GroupObj": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            }
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        }
      },
      "Profile": {
        "type": "string",
        "enum": [
          "MAC-1_Classified",
          "MAC-1_Sensitive",
          "MAC-1_Public",
          "MAC-2_Classified",
          "MAC-2_Sensitive",
          "MAC-2_Public",
          "MAC-3_Classified",
          "MAC-3_Sensitive",
          "MAC-3_Public"
        ]
      },
      "Rule": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "weight": {
            "type": "string"
          },
          "vulnDiscussion": {
            "type": "string"
          },
          "falsePositives": {
            "type": "string"
          },
          "falseNegatives": {
            "type": "string"
          },
          "documentable": {
            "type": "string"
          },
          "mitigations": {
            "type": "string"
          },
          "securityOverrideGuidance": {
            "type": "string"
          },
          "potentialImpacts": {
            "type": "string"
          },
          "thirdPartyTools": {
            "type": "string"
          },
          "mitigationControl": {
            "type": "string"
          },
          "responsibility": {
            "type": "string"
          },
          "cci": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Check"
            }
          },
          "fixes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fix"
            }
          }
        }
      },
      "RuleAbbr": {
        "type": "object",
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "Check": {
        "type": "object",
        "properties": {
          "checkId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Fix": {
        "type": "object",
        "properties": {
          "fixId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CciReferenceItem": {
        "type": "object",
        "properties": {
          "creator": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "indexDisa": {
            "type": "string"
          },
          "textRefNist": {
            "type": "string"
          },
          "parentControl": {
            "type": "string"
          }
        }
      },
      "CciListItem": {
        "type": "object",
        "properties": {
          "cci": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CciReferenceItem"
            }
          }
        }
      },
      "Cci": {
        "type": "object",
        "properties": {
          "cci": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "publishdate": {
            "type": "string"
          },
          "contributor": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "defintion": {
            "type": "string"
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CciReferenceItem"
            }
          },
          "current_revisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Revision"
            }
          }
        }
      },
      "ApiVersion": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "commit": {
            "type": "string"
          },
          "nearest-tag": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "BenchmarkIdPath": {
        "name": "benchmarkId",
        "in": "path",
        "description": "A path parameter that indentifies a STIG",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "BenchmarkIdQuery": {
        "name": "benchmarkId",
        "in": "query",
        "description": "A query parameter that indentifies a STIG",
        "schema": {
          "type": "string"
        }
      },
      "GroupIdPath": {
        "name": "groupId",
        "in": "path",
        "description": "A path parameter that indentifies a Group",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RuleIdPath": {
        "name": "ruleId",
        "in": "path",
        "description": "A path parameter that indentifies a Rule",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "CciPath": {
        "name": "cci",
        "in": "path",
        "description": "A path parameter that indentifies a CCI",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RevisionStrPath": {
        "name": "revisionStr",
        "in": "path",
        "description": "A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | 'latest' ]",
        "required": true,
        "schema": {
          "pattern": "^(V\\d+R\\d+(\\.\\d+)?|latest)$",
          "type": "string"
        }
      },
      "ChecklistProjectionQuery": {
        "name": "projection",
        "in": "query",
        "description": "Optional properties to return. Selecting \"checks\" or \"fixes\" will also select \"fullrules\"\n",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "profiles",
              "cci",
              "fullrules",
              "checks",
              "fixes"
            ]
          }
        }
      },
      "ProfileQuery": {
        "name": "profile",
        "in": "query",
        "description": "Filter by profile",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MAC-1_Classified",
              "MAC-1_Sensitive",
              "MAC-1_Public",
              "MAC-2_Classified",
              "MAC-2_Sensitive",
              "MAC-2_Public",
              "MAC-3_Classified",
              "MAC-3_Sensitive",
              "MAC-3_Public"
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "oauth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://localhost:8080/auth/realms/stig-mgmt/protocol/openid-connect/auth",
            "scopes": {
              "stig-manager": "Top-level scope",
              "stig-manager:stig": "Full access to the STIG collection",
              "stig-manager:stig:read": "Read access to the STIG collection",
              "stig-manager:package": "Full access to the Package collection",
              "stig-manager:package:read": "Read-only access to the Package collection"
            }
          }
        }
      }
    }
  }
}