openapi: 3.0.1
info:
  contact:
    email: carl.a.smigielski@saic.com
    name: Carl Smigielski
  description: An API for managing evaluations of Security Technical Implementation
    Guide (STIG) assessments.
  title: STIG Management API
  version: 1.0.0
servers:
- url: http://localhost:54000/stig-manager/api
paths:
  /packages:
    get:
      operationId: getPackages
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - assets
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageProjected'
                type: array
          description: PackageProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return a list of Packages accessible to the requester
      tags:
      - Package
      x-classic:
      - getPackages
      - getPackageProps
      x-swagger-router-controller: Package
    post:
      operationId: createPackage
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - assets
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageAssign'
        required: true
        x-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackageProjected'
                type: array
          description: PackageProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Create a Package
      tags:
      - Package
      x-codegen-request-body-name: body
      x-swagger-router-controller: Package
  /packages/{packageId}:
    delete:
      operationId: deletePackage
      parameters:
      - description: A path parameter that indentifies a Package
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - assets
            - stigs
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
          description: PackageProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Delete a Package
      tags:
      - Package
      x-swagger-router-controller: Package
    get:
      operationId: getPackage
      parameters:
      - description: A path parameter that indentifies a Package
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - assets
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
          description: PackageProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return a Package
      tags:
      - Package
      x-swagger-router-controller: Package
    patch:
      operationId: updatePackage
      parameters:
      - description: A path parameter that indentifies a Package
        explode: false
        in: path
        name: packageId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - assets
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageAssign'
        required: true
        x-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
          description: PackageProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Merge updates to a Package
      tags:
      - Package
      x-codegen-request-body-name: body
      x-swagger-router-controller: Package
  /assets:
    get:
      operationId: getAssets
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - packages
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      - description: Selects Assets mapped to a Package
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          type: integer
        style: form
      - description: Selects Assets mapped to a STIG
        explode: true
        in: query
        name: benchmarkId
        required: false
        schema:
          type: string
        style: form
      - description: Selects Assets exactly matching a department string
        explode: true
        in: query
        name: dept
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AssetProjected'
                type: array
          description: AssetProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return a list of Assets accessible to the requester
      tags:
      - Asset
      x-swagger-router-controller: Asset
    post:
      operationId: createAsset
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - packages
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAssign'
        required: true
        x-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
          description: AssetProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Create an Asset
      tags:
      - Asset
      x-codegen-request-body-name: body
      x-swagger-router-controller: Asset
  /assets/{assetId}:
    delete:
      operationId: deleteAsset
      parameters:
      - description: A path parameter that indentifies an Asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - packages
            - stigs
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
          description: AssetProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Delete an Asset
      tags:
      - Asset
      x-swagger-router-controller: Asset
    get:
      operationId: getAsset
      parameters:
      - description: A path parameter that indentifies an Asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - packages
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
          description: AssetProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return an Asset
      tags:
      - Asset
      x-swagger-router-controller: Asset
    patch:
      operationId: updateAsset
      parameters:
      - description: A path parameter that indentifies an Asset
        explode: false
        in: path
        name: assetId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - packages
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAssign'
        required: true
        x-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
          description: AssetProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Merge updates to an Asset
      tags:
      - Asset
      x-codegen-request-body-name: body
      x-swagger-router-controller: Asset
  /reviews:
    get:
      operationId: getReviews
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - asset
            - history
            - rule
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/ReviewState'
        style: form
      - explode: true
        in: query
        name: action
        required: false
        schema:
          $ref: '#/components/schemas/ReviewAction'
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/ReviewStatus'
        style: form
      - description: Selects Reviews of a Rule
        explode: true
        in: query
        name: ruleId
        required: false
        schema:
          type: string
        style: form
      - description: Selects Reviews mapped to a STIG
        explode: true
        in: query
        name: benchmarkId
        required: false
        schema:
          type: string
        style: form
      - description: Selects Reviews mapped to an Asset
        explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: string
        style: form
      - description: Selects Reviews mapped to a Package
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReviewProjected'
                type: array
          description: ReviewProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return a list of Reviews accessible to the requester
      tags:
      - Review
      x-swagger-router-controller: Review
    post:
      operationId: createReview
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - asset
            - history
            - rule
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
        x-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
          description: ReviewProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Create a Review
      tags:
      - Review
      x-codegen-request-body-name: body
      x-swagger-router-controller: Review
  /reviews/{reviewId}:
    delete:
      operationId: deleteReview
      parameters:
      - description: A path parameter that indentifies a Review
        explode: false
        in: path
        name: reviewId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - asset
            - history
            - rule
            - stigs
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
          description: ReviewProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Delete a Review
      tags:
      - Review
      x-swagger-router-controller: Review
    get:
      operationId: getReview
      parameters:
      - description: A path parameter that indentifies a Review
        explode: false
        in: path
        name: reviewId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - asset
            - history
            - rule
            - stigs
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
          description: ReviewProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package:read
      summary: Return a Review
      tags:
      - Review
      x-swagger-router-controller: Review
    patch:
      operationId: updateReview
      parameters:
      - description: A path parameter that indentifies a Review
        explode: false
        in: path
        name: reviewId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - asset
            - history
            - rule
            - stigs
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAssign'
        required: true
        x-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
          description: ReviewProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:package
      summary: Merge updates to a Review
      tags:
      - Review
      x-codegen-request-body-name: body
      x-swagger-router-controller: Review
  /users:
    get:
      operationId: getUsers
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - stigAssets
            type: string
          type: array
        style: form
      - description: Elevate the user context for this request if user is permitted
          (canAdmin)
        explode: true
        in: query
        name: elevate
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: role
        required: false
        schema:
          $ref: '#/components/schemas/UserRole'
        style: form
      - description: Selects Users mapped to a Package
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          type: integer
        style: form
      - description: Selects Users mapped to a STIG
        explode: true
        in: query
        name: benchmarkId
        required: false
        schema:
          type: string
        style: form
      - description: Selects Users exactly matching a department string
        explode: true
        in: query
        name: dept
        required: false
        schema:
          type: string
        style: form
      - description: Selects Users matching the condition
        explode: true
        in: query
        name: canAdmin
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserProjected'
                type: array
          description: UserProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:user:read
      summary: Return a list of Users accessible to the requester
      tags:
      - User
      x-swagger-router-controller: User
    post:
      operationId: createUser
      parameters:
      - description: |
          Additional properties to include in the response.
        explode: true
        in: query
        name: projection
        required: false
        schema:
          items:
            enum:
            - stigAssets
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssign'
        required: true
        x-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserProjected'
                type: array
          description: UserProjected response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:user
      summary: Create a User
      tags:
      - User
      x-codegen-request-body-name: body
      x-swagger-router-controller: User
  /stigs:
    get:
      operationId: getSTIGs
      parameters:
      - description: Package identifier
        explode: true
        in: query
        name: packageId
        required: false
        schema:
          type: integer
        style: form
      - description: Asset identifier
        explode: true
        in: query
        name: assetId
        required: false
        schema:
          type: integer
        style: form
      - description: A string found anywhere in a STIG title
        explode: true
        in: query
        name: title
        required: false
        schema:
          type: string
        style: form
      - description: An operating system TOE
        explode: true
        in: query
        name: os
        required: false
        schema:
          enum:
          - windows
          - linux
          - macos
          - ios
          - android
          - other
          - none
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/STIG'
                type: array
          description: STIG response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return a list of available STIGs
      tags:
      - STIG
      x-swagger-router-controller: STIG
    post:
      operationId: addSTIG
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                source:
                  description: An XCCDF file
                  format: binary
                  type: string
        required: true
        x-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
          description: The added STIG
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig
      summary: Import a new STIG
      tags:
      - STIG
      x-codegen-request-body-name: body
      x-rbac:
      - admin
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}:
    delete:
      operationId: deleteStigById
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
          description: The deleted STIG
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig
      summary: Deletes a STIG (*** and all revisions ***)
      tags:
      - STIG
      x-rbac:
      - admin
      x-swagger-router-controller: STIG
    get:
      operationId: getStigById
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
          description: STIG response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return properties of the specified STIG
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions:
    get:
      operationId: getRevisionsByBenchmarkId
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Revision'
                type: array
          description: Revision response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return a list of revisions for the specified STIG
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions/{revisionStr}:
    delete:
      operationId: deleteRevisionByString
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
          description: The deleted Revision
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig
      summary: Deletes the specified revision of a STIG
      tags:
      - STIG
      x-rbac:
      - admin
      x-swagger-router-controller: STIG
    get:
      operationId: getRevisionByString
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
          description: Revision response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return metadata for the specified revision of a STIG
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions/{revisionStr}/groups:
    get:
      description: Can optionally specify profile filters.
      operationId: getGroupsByRevision
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      - description: Filter by profile
        explode: false
        in: query
        name: profile
        required: false
        schema:
          items:
            enum:
            - MAC-1_Classified
            - MAC-1_Sensitive
            - MAC-1_Public
            - MAC-2_Classified
            - MAC-2_Sensitive
            - MAC-2_Public
            - MAC-3_Classified
            - MAC-3_Sensitive
            - MAC-3_Public
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
          description: Group response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return the list of groups for the specified revision of a STIG.
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions/{revisionStr}/groups/{groupId}:
    get:
      description: None
      operationId: getGroupByRevision
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      - description: A path parameter that indentifies a Group
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupObj'
          description: Group response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return the rules, checks and fixes for a Group from a specified revision
        of a STIG.
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions/{revisionStr}/rules:
    get:
      description: Can optionally specify profile filters.
      operationId: getRulesByRevision
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      - description: Filter by profile
        explode: false
        in: query
        name: profile
        required: false
        schema:
          items:
            enum:
            - MAC-1_Classified
            - MAC-1_Sensitive
            - MAC-1_Public
            - MAC-2_Classified
            - MAC-2_Sensitive
            - MAC-2_Public
            - MAC-3_Classified
            - MAC-3_Sensitive
            - MAC-3_Public
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: Rule response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return rule data for the specified revision of a STIG.
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/rules/{ruleId}:
    get:
      operationId: getRuleByRuleId
      parameters:
      - description: A path parameter that indentifies a Rule
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: Rule response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return the defintion and associated checks and fixes for the specified
        Rule
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/{benchmarkId}/revisions/{revisionStr}/ccis:
    get:
      operationId: getCcisByRevision
      parameters:
      - description: A path parameter that indentifies a STIG
        explode: false
        in: path
        name: benchmarkId
        required: true
        schema:
          type: string
        style: simple
      - description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
          | 'latest' ]
        explode: false
        in: path
        name: revisionStr
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CciListItem'
                type: array
          description: CCI response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return a list of CCIs from a STIG revision
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /stigs/ccis/{cci}:
    get:
      operationId: getCci
      parameters:
      - description: A path parameter that indentifies a CCI
        explode: false
        in: path
        name: cci
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cci'
                type: array
          description: CCI response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - oauth:
        - stig-manager:stig:read
      summary: Return data for the specified CCI
      tags:
      - STIG
      x-swagger-router-controller: STIG
  /version:
    get:
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
          description: Version response
      summary: Return version information
      tags:
      - Version
      x-swagger-router-controller: Version
components:
  parameters:
    ElevateQuery:
      description: Elevate the user context for this request if user is permitted
        (canAdmin)
      explode: true
      in: query
      name: elevate
      required: false
      schema:
        type: boolean
      style: form
    PackageProjectionQuery:
      description: |
        Additional properties to include in the response.
      explode: true
      in: query
      name: projection
      required: false
      schema:
        items:
          enum:
          - assets
          - stigs
          type: string
        type: array
      style: form
    AssetProjectionQuery:
      description: |
        Additional properties to include in the response.
      explode: true
      in: query
      name: projection
      required: false
      schema:
        items:
          enum:
          - packages
          - stigs
          type: string
        type: array
      style: form
    ReviewProjectionQuery:
      description: |
        Additional properties to include in the response.
      explode: true
      in: query
      name: projection
      required: false
      schema:
        items:
          enum:
          - asset
          - history
          - rule
          - stigs
          type: string
        type: array
      style: form
    ReviewStateQuery:
      explode: true
      in: query
      name: state
      required: false
      schema:
        $ref: '#/components/schemas/ReviewState'
      style: form
    ReviewStatusQuery:
      explode: true
      in: query
      name: status
      required: false
      schema:
        $ref: '#/components/schemas/ReviewStatus'
      style: form
    ReviewActionQuery:
      explode: true
      in: query
      name: action
      required: false
      schema:
        $ref: '#/components/schemas/ReviewAction'
      style: form
    UserProjectionQuery:
      description: |
        Additional properties to include in the response.
      explode: true
      in: query
      name: projection
      required: false
      schema:
        items:
          enum:
          - stigAssets
          type: string
        type: array
      style: form
    UserRoleQuery:
      explode: true
      in: query
      name: role
      required: false
      schema:
        $ref: '#/components/schemas/UserRole'
      style: form
    BenchmarkIdPath:
      description: A path parameter that indentifies a STIG
      explode: false
      in: path
      name: benchmarkId
      required: true
      schema:
        type: string
      style: simple
    BenchmarkIdQuery:
      description: A query parameter that indentifies a STIG
      explode: true
      in: query
      name: benchmarkId
      required: false
      schema:
        type: string
      style: form
    GroupIdPath:
      description: A path parameter that indentifies a Group
      explode: false
      in: path
      name: groupId
      required: true
      schema:
        type: string
      style: simple
    RuleIdPath:
      description: A path parameter that indentifies a Rule
      explode: false
      in: path
      name: ruleId
      required: true
      schema:
        type: string
      style: simple
    CciPath:
      description: A path parameter that indentifies a CCI
      explode: false
      in: path
      name: cci
      required: true
      schema:
        type: string
      style: simple
    RevisionStrPath:
      description: A path parameter that indentifies a STIG revision [ V{version_num}R{release_num}
        | 'latest' ]
      explode: false
      in: path
      name: revisionStr
      required: true
      schema:
        pattern: ^(V\d+R\d+(\.\d+)?|latest)$
        type: string
      style: simple
    ChecklistProjectionQuery:
      description: |
        Optional properties to return. Selecting "checks" or "fixes" will also select "fullrules"
      explode: false
      in: query
      name: projection
      required: false
      schema:
        items:
          enum:
          - profiles
          - cci
          - fullrules
          - checks
          - fixes
          type: string
        type: array
      style: form
    ProfileQuery:
      description: Filter by profile
      explode: false
      in: query
      name: profile
      required: false
      schema:
        items:
          enum:
          - MAC-1_Classified
          - MAC-1_Sensitive
          - MAC-1_Public
          - MAC-2_Classified
          - MAC-2_Sensitive
          - MAC-2_Public
          - MAC-3_Classified
          - MAC-3_Sensitive
          - MAC-3_Public
          type: string
        type: array
      style: form
  schemas:
    Error:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
    STIG:
      example:
        lastRevisionDate: lastRevisionDate
        title: title
        benchmarkId: benchmarkId
        lastRevisionStr: lastRevisionStr
      properties:
        benchmarkId:
          type: string
        title:
          type: string
        lastRevisionStr:
          type: string
        lastRevisionDate:
          type: string
      required:
      - benchmarkId
      type: object
    Revision:
      example:
        statusDate: statusDate
        revisionStr: revisionStr
        release: release
        description: description
        benchmarkDate: benchmarkDate
        version: version
        benchmarkId: benchmarkId
        status: status
      properties:
        benchmarkId:
          type: string
        revisionStr:
          type: string
        version:
          type: string
        release:
          type: string
        benchmarkDate:
          type: string
        status:
          type: string
        statusDate:
          type: string
        description:
          type: string
      type: object
    GroupList:
      items:
        properties:
          groupId:
            type: string
          title:
            type: string
          profiles:
            items:
              $ref: '#/components/schemas/Profile'
            type: array
          rules:
            items:
              $ref: '#/components/schemas/RuleAbbr'
            type: array
        type: object
      type: array
    GroupObj:
      example:
        groupId: groupId
        profiles:
        - null
        - null
        rules:
        - severity: severity
          vulnDiscussion: vulnDiscussion
          thirdPartyTools: thirdPartyTools
          falseNegatives: falseNegatives
          documentable: documentable
          cci:
          - cci
          - cci
          weight: weight
          falsePositives: falsePositives
          potentialImpacts: potentialImpacts
          title: title
          version: version
          mitigations: mitigations
          fixes:
          - text: text
            fixId: fixId
          - text: text
            fixId: fixId
          mitigationControl: mitigationControl
          checks:
          - checkId: checkId
            content: content
          - checkId: checkId
            content: content
          responsibility: responsibility
          securityOverrideGuidance: securityOverrideGuidance
          ruleId: ruleId
        - severity: severity
          vulnDiscussion: vulnDiscussion
          thirdPartyTools: thirdPartyTools
          falseNegatives: falseNegatives
          documentable: documentable
          cci:
          - cci
          - cci
          weight: weight
          falsePositives: falsePositives
          potentialImpacts: potentialImpacts
          title: title
          version: version
          mitigations: mitigations
          fixes:
          - text: text
            fixId: fixId
          - text: text
            fixId: fixId
          mitigationControl: mitigationControl
          checks:
          - checkId: checkId
            content: content
          - checkId: checkId
            content: content
          responsibility: responsibility
          securityOverrideGuidance: securityOverrideGuidance
          ruleId: ruleId
        title: title
      properties:
        groupId:
          type: string
        title:
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/Profile'
          type: array
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
      type: object
    Profile:
      enum:
      - MAC-1_Classified
      - MAC-1_Sensitive
      - MAC-1_Public
      - MAC-2_Classified
      - MAC-2_Sensitive
      - MAC-2_Public
      - MAC-3_Classified
      - MAC-3_Sensitive
      - MAC-3_Public
      type: string
    Rule:
      example:
        severity: severity
        vulnDiscussion: vulnDiscussion
        thirdPartyTools: thirdPartyTools
        falseNegatives: falseNegatives
        documentable: documentable
        cci:
        - cci
        - cci
        weight: weight
        falsePositives: falsePositives
        potentialImpacts: potentialImpacts
        title: title
        version: version
        mitigations: mitigations
        fixes:
        - text: text
          fixId: fixId
        - text: text
          fixId: fixId
        mitigationControl: mitigationControl
        checks:
        - checkId: checkId
          content: content
        - checkId: checkId
          content: content
        responsibility: responsibility
        securityOverrideGuidance: securityOverrideGuidance
        ruleId: ruleId
      properties:
        ruleId:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
        weight:
          type: string
        vulnDiscussion:
          type: string
        falsePositives:
          type: string
        falseNegatives:
          type: string
        documentable:
          type: string
        mitigations:
          type: string
        securityOverrideGuidance:
          type: string
        potentialImpacts:
          type: string
        thirdPartyTools:
          type: string
        mitigationControl:
          type: string
        responsibility:
          type: string
        cci:
          items:
            type: string
          type: array
        checks:
          items:
            $ref: '#/components/schemas/Check'
          type: array
        fixes:
          items:
            $ref: '#/components/schemas/Fix'
          type: array
      type: object
    RuleAbbr:
      properties:
        ruleId:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
      type: object
    Check:
      example:
        checkId: checkId
        content: content
      properties:
        checkId:
          type: string
        content:
          type: string
      type: object
    Fix:
      example:
        text: text
        fixId: fixId
      properties:
        fixId:
          type: string
        text:
          type: string
      type: object
    CciReferenceItem:
      example:
        parentControl: parentControl
        creator: creator
        indexDisa: indexDisa
        textRefNist: textRefNist
        location: location
        title: title
        version: version
      properties:
        creator:
          type: string
        title:
          type: string
        version:
          type: string
        location:
          type: string
        indexDisa:
          type: string
        textRefNist:
          type: string
        parentControl:
          type: string
      type: object
    CciListItem:
      example:
        references:
        - parentControl: parentControl
          creator: creator
          indexDisa: indexDisa
          textRefNist: textRefNist
          location: location
          title: title
          version: version
        - parentControl: parentControl
          creator: creator
          indexDisa: indexDisa
          textRefNist: textRefNist
          location: location
          title: title
          version: version
        cci: cci
        type: type
      properties:
        cci:
          type: string
        type:
          type: string
        references:
          items:
            $ref: '#/components/schemas/CciReferenceItem'
          type: array
      type: object
    Cci:
      example:
        defintion: defintion
        contributor: contributor
        references:
        - parentControl: parentControl
          creator: creator
          indexDisa: indexDisa
          textRefNist: textRefNist
          location: location
          title: title
          version: version
        - parentControl: parentControl
          creator: creator
          indexDisa: indexDisa
          textRefNist: textRefNist
          location: location
          title: title
          version: version
        cci: cci
        publishdate: publishdate
        type: type
        current_revisions:
        - statusDate: statusDate
          revisionStr: revisionStr
          release: release
          description: description
          benchmarkDate: benchmarkDate
          version: version
          benchmarkId: benchmarkId
          status: status
        - statusDate: statusDate
          revisionStr: revisionStr
          release: release
          description: description
          benchmarkDate: benchmarkDate
          version: version
          benchmarkId: benchmarkId
          status: status
        status: status
      properties:
        cci:
          type: string
        status:
          type: string
        publishdate:
          type: string
        contributor:
          type: string
        type:
          type: string
        defintion:
          type: string
        references:
          items:
            $ref: '#/components/schemas/CciReferenceItem'
          type: array
        current_revisions:
          items:
            $ref: '#/components/schemas/Revision'
          type: array
      type: object
    ApiVersion:
      example:
        nearest-tag: nearest-tag
        commit: commit
        branch: branch
      properties:
        branch:
          type: string
        commit:
          type: string
        nearest-tag:
          type: string
      type: object
    MacCl:
      enum:
      - MAC-1_Classified
      - MAC-1_Sensitive
      - MAC-1_Public
      - MAC-2_Classified
      - MAC-2_Sensitive
      - MAC-2_Public
      - MAC-3_Classified
      - MAC-3_Sensitive
      - MAC-3_Public
      type: string
    Package:
      properties:
        packageId:
          nullable: false
          readOnly: true
          type: integer
        name:
          nullable: false
          type: string
        emassId:
          nullable: true
          type: string
        pocName:
          nullable: true
          type: string
        pocEmail:
          nullable: true
          type: string
        pocPhone:
          nullable: true
          type: string
        reqRar:
          nullable: true
          type: boolean
        macCl:
          $ref: '#/components/schemas/MacCl'
      type: object
    PackageBasic:
      properties:
        packageId:
          type: integer
        name:
          type: string
      type: object
    PackageProjected:
      allOf:
      - $ref: '#/components/schemas/Package'
      - $ref: '#/components/schemas/PackageProjected_allOf'
    PackageAssign:
      allOf:
      - $ref: '#/components/schemas/Package'
      - $ref: '#/components/schemas/PackageAssign_allOf'
    Asset:
      properties:
        assetId:
          readOnly: true
          type: integer
        name:
          nullable: false
          type: string
        dept:
          nullable: false
          type: string
        ip:
          nullable: true
          type: string
        nonnetwork:
          nullable: true
          type: boolean
        scanexempt:
          nullable: true
          type: boolean
        profile:
          $ref: '#/components/schemas/MacCl'
      required:
      - assetId
      - dept
      - name
      type: object
    AssetProjected:
      allOf:
      - $ref: '#/components/schemas/Asset'
      - $ref: '#/components/schemas/AssetProjected_allOf'
    AssetBasic:
      properties:
        assetId:
          type: integer
        name:
          type: string
        dept:
          type: string
      type: object
    AssetAssign:
      allOf:
      - $ref: '#/components/schemas/Asset'
      - $ref: '#/components/schemas/AssetAssign_allOf'
    StigAssigned:
      properties:
        saId:
          type: integer
        benchmarkId:
          type: string
      type: object
    UserRole:
      enum:
      - IA Staff
      - IA Officer
      - IA Workforce
      type: string
    User:
      properties:
        userId:
          readOnly: true
          type: integer
        username:
          type: string
        displayName:
          type: string
        dept:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        canAdmin:
          type: boolean
      type: object
    UserProjected:
      allOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/UserProjected_allOf'
    UserBasic:
      properties:
        userId:
          readOnly: true
          type: integer
        username:
          type: string
      type: object
    UserAssign:
      allOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/UserAssign_allOf'
    ReviewState:
      description: The Review state
      enum:
      - "0"
      - NF
      - NA
      type: string
    ReviewAction:
      enum:
      - Remediate
      - Mitigate
      - Exception
      type: string
    ReviewStatus:
      enum:
      - Saved
      - Submitted
      - Approved
      - Rejected
      type: string
    Review:
      example:
        rejectText: rejectText
        actionComment: actionComment
        userId: 1
        rejectUserId: 5
        assetId: 6
        reqDoc: true
        stateComment: stateComment
        ruleId: ruleId
        reviewId: 0
        autoState: true
        ts: ts
      properties:
        reviewId:
          readOnly: true
          type: integer
        assetId:
          type: integer
        ruleId:
          type: string
        state:
          $ref: '#/components/schemas/ReviewState'
        stateComment:
          type: string
        autoState:
          type: boolean
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
        reqDoc:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
        userId:
          readOnly: true
          type: integer
        ts:
          readOnly: true
          type: string
        rejectText:
          type: string
        rejectUserId:
          type: integer
      type: object
    ReviewProjected:
      allOf:
      - $ref: '#/components/schemas/Review'
      - $ref: '#/components/schemas/ReviewProjected_allOf'
    AssetAssigned:
      properties:
        saId:
          type: integer
        asset:
          $ref: '#/components/schemas/AssetBasic'
      type: object
    StigAssetAssigned:
      properties:
        saId:
          type: integer
        benchmarkId:
          type: string
        asset:
          $ref: '#/components/schemas/AssetBasic'
      type: object
    PackageProjected_allOf:
      properties:
        assets:
          items:
            $ref: '#/components/schemas/AssetBasic'
          type: array
        stigs:
          items:
            $ref: '#/components/schemas/STIG'
          type: array
    PackageAssign_allOf:
      properties:
        assetIds:
          items:
            type: integer
          type: array
    AssetProjected_allOf:
      properties:
        packages:
          description: The Packages mapped to this Asset
          items:
            $ref: '#/components/schemas/PackageBasic'
          type: array
        stigs:
          description: The benchmarkIds of STIGs mapped to this Asset
          items:
            $ref: '#/components/schemas/StigAssigned'
          type: array
    AssetAssign_allOf:
      properties:
        packageIds:
          description: The packageIds mapped to this Asset
          items:
            type: integer
          type: array
        benchmarkIds:
          description: The benchmarkIds of STIGs mapped to this Asset
          items:
            type: string
          type: array
    UserProjected_allOf:
      properties:
        stigAssets:
          items:
            $ref: '#/components/schemas/StigAssetAssigned'
          type: array
    UserAssign_allOf:
      properties:
        saIds:
          description: The STIG/Asset pairs (saIds) mapped to this Asset
          items:
            type: integer
          type: array
    ReviewProjected_allOf:
      properties:
        history:
          items:
            type: string
          type: array
        asset:
          $ref: '#/components/schemas/AssetBasic'
        stigs:
          items:
            type: string
          type: array
        rule:
          $ref: '#/components/schemas/RuleAbbr'
  securitySchemes:
    oauth:
      flows:
        implicit:
          authorizationUrl: http://localhost:8080/auth/realms/cmsat/protocol/openid-connect/auth
          scopes:
            stig-manager: Top-level scope
            stig-manager:stig: Full access to the STIG collection
            stig-manager:stig:read: Read access to the STIG collection
            stig-manager:package: Full access to the Package collection
            stig-manager:package:read: Read-only access to the Package collection
            stig-manager:user: Full access to the Users collection
            stig-manager:user:read: Read-only access to the Users collection
      type: oauth2
