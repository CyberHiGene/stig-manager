openapi: 3.0.1
info:
  title: STIG Management API
  description: An API for managing evaluations of Security Technical Implementation Guide (STIG) assessments.
  contact:
    name: Carl Smigielski
    email: carl.a.smigielski@saic.com
  version: 1.0.0
servers:
  - url: 'http://localhost:54000/stig-manager/api'
paths:
  /packages:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/PackageProjectionQuery'
    get:
      tags:
        - Package
      summary: Return a list of Packages accessible to the requester
      operationId: getPackages
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Package
      summary: Create a Package
      operationId: createPackage
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCreateOrReplace'
      responses:
        '201':
          description: PackageProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/packages/{packageId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - name: packageId
        in: path
        description: A path parameter that indentifies a Package
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/PackageProjectionQuery'
    get:
      tags:
        - Package
      summary: Return a Package
      operationId: getPackage
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    patch:
      tags:
        - Package
      summary: Merge updates to a Package
      operationId: updatePackage
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageUpdate'
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    put:
      tags:
        - Package
      summary: Replace all properties of a Package
      operationId: replacePackage
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCreateOrReplace'
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Package
      summary: Delete a Package
      operationId: deletePackage
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/packages/{packageId}/checklists/{benchmarkId}/{revisionStr}':
    parameters:
      - name: packageId
        in: path
        description: A path parameter that indentifies a Package
        required: true
        schema:
          type: integer
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
      - name: revisionStr
        in: path
        description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
    get:
      tags:
        - Package
      summary: Return the Checklist for the supplied Package and STIG
      operationId: getChecklistByPackageStig
      responses:
        '200':
          description: PackageProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  /assets:
    parameters:
      - $ref: '#/components/parameters/AssetProjectionQuery'
    get:
      tags:
        - Asset
      summary: Return a list of Assets accessible to the requester
      operationId: getAssets
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - name: packageId
          in: query
          description: Selects Assets mapped to a Package
          schema:
            type: integer
        - name: benchmarkId
          in: query
          description: Selects Assets mapped to a STIG
          schema:
            type: string
        - name: dept
          in: query
          description: Selects Assets exactly matching a department string
          schema:
            type: string
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Asset
      summary: Create an Asset
      operationId: createAsset
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateOrReplace'
      responses:
        '201':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/assets/{assetId}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/AssetProjectionQuery'
    get:
      tags:
        - Asset
      summary: Return an Asset
      operationId: getAsset
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    patch:
      tags:
        - Asset
      summary: Merge updates to an Asset
      operationId: updateAsset
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetUpdate'
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    put:
      tags:
        - Asset
      summary: Replace all properties of an Asset
      operationId: replaceAsset
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreateOrReplace'
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Asset
      summary: Delete an Asset
      operationId: deleteAsset
      responses:
        '200':
          description: AssetProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/assets/{assetId}/checklists/{benchmarkId}/{revisionStr}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
      - name: revisionStr
        in: path
        description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
        required: true
        schema:
          pattern: ^(V\d+R\d+(\.\d+)?|latest)$
          type: string
    get:
      tags:
        - Asset
      summary: Return the Checklist for the supplied Asset and STIG
      operationId: getChecklistByAssetStig
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - name: format
          in: query
          description: The format of the response. Default if missing is 'json'
          schema:
            type: string
            default: json
            enum:
              - json
              - ckl
      responses:
        '200':
          description: Review response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChecklistCkl'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  /reviews:
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
    get:
      tags:
        - Review
      summary: Return a list of Reviews accessible to the requester
      operationId: getReviews
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - $ref: '#/components/parameters/ReviewStateQuery'
        - $ref: '#/components/parameters/ReviewActionQuery'
        - $ref: '#/components/parameters/ReviewStatusQuery'
        - name: ruleId
          in: query
          description: Selects Reviews of a Rule
          schema:
            type: string
        - name: userId
          in: query
          description: Selects Reviews last saved by a User
          schema:
            type: integer
        - name: assetId
          in: query
          description: Selects Reviews mapped to an Asset
          schema:
            type: integer
        - name: benchmarkId
          in: query
          description: Selects Reviews mapped to a STIG; requires revisionStr
          schema:
            type: string
        - name: revisionStr
          in: query
          description: 'Selects Reviews mapped to a Revision [ V{version_num}R{release_num} | ''latest'' ]; requires benchmarkId'
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - name: packageId
          in: query
          description: Selects Reviews mapped to a Package
          schema:
            type: integer
        - $ref: '#/components/parameters/ReviewProjectionQuery'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    post:
      tags:
        - Review
      summary: Import Review(s) from a CKL or XCCDF file or ZIP archive
      operationId: importReviews
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                assetId:
                  type: string
                benchmarkId:
                  type: string
                packageId:
                  type: string
                source:
                  type: string
                importFile:
                  type: string
                  format: binary
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    put:
      tags:
        - Review
      summary: Create or update one or more Reviews
      operationId: putReviews
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ReviewPut'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/reviews/{assetId}':
    parameters:
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/ReviewProjectionQuery'
    get:
      tags:
        - Review
      summary: Return a list of Reviews for an Asset
      operationId: getReviewsByAssetId
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - $ref: '#/components/parameters/ReviewStateQuery'
        - $ref: '#/components/parameters/ReviewActionQuery'
        - $ref: '#/components/parameters/ReviewStatusQuery'
        - name: benchmarkId
          in: query
          description: Selects Reviews mapped to a STIG; requires revisionStr
          schema:
            type: string
        - name: revisionStr
          in: query
          description: 'Selects Reviews mapped to a Revision [ V{version_num}R{release_num} | ''latest'' ]; requires benchmarkId'
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
  '/reviews/{assetId}/{ruleId}':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - name: assetId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
      - name: ruleId
        in: path
        description: A path parameter that indentifies a Rule
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ReviewProjectionQuery'
    get:
      tags:
        - Review
      summary: Return the Review for an Asset and Rule
      operationId: getReviewByAssetRule
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    put:
      tags:
        - Review
      summary: Create or update a Review
      description: 'Create a new Review, or update all properties of an existing Review, setting missing properties to null'
      operationId: putReview
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewAssetRulePut'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    patch:
      tags:
        - Review
      summary: Merge update a Review
      description: 'Update the given properties of a Review, if it exists'
      operationId: patchReview
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewAssetRulePatch'
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
    delete:
      tags:
        - Review
      summary: Delete a Review
      operationId: deleteReview
      responses:
        '200':
          description: ReviewProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  /user:
    get:
      tags:
        - User
      summary: Return the requester's user information
      operationId: getUserObject
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
  /users:
    parameters:
      - $ref: '#/components/parameters/UserProjectionQuery'
    get:
      tags:
        - User
      summary: Return a list of Users accessible to the requester
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/ElevateQuery'
        - $ref: '#/components/parameters/UserRoleQuery'
        - name: dept
          in: query
          description: Selects Users exactly matching a department string
          schema:
            type: string
        - name: canAdmin
          in: query
          description: Selects Users matching the condition
          schema:
            type: boolean
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
    post:
      tags:
        - User
      summary: Create a User
      operationId: createUser
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrReplace'
      responses:
        '201':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
  /users/{userId}:
    parameters:
      - $ref: '#/components/parameters/UserProjectionQuery'
      - name: userId
        in: path
        description: A path parameter that indentifies an Asset
        required: true
        schema:
          type: integer
    get:
      tags:
        - User
      summary: Return a User
      operationId: getUserByUserId
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user:read'
    patch:
      tags:
        - User
      summary: Merge update a User
      operationId: updateUser
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
    put:
      tags:
        - User
      summary: Replace all properties of a User
      operationId: replaceUser
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateOrReplace'
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
    delete:
      tags:
        - User
      summary: Delete a User
      operationId: deleteUser
      x-codegen-request-body-name: body
      responses:
        '200':
          description: UserProjected response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:user'
    
    
  /stigs:
    get:
      tags:
        - STIG
      summary: Return a list of available STIGs
      operationId: getSTIGs
      parameters:
        - name: title
          in: query
          description: A string found anywhere in a STIG title
          schema:
            type: string
      responses:
        '200':
          description: STIG response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    post:
      tags:
        - STIG
      summary: Import a new STIG
      operationId: addSTIG
      x-codegen-request-body-name: body
      requestBody:
        required: true
        x-name: body
        content:
          multipart/form-data:
            schema:
              properties:
                source:
                  type: string
                  description: An XCCDF file
                  format: binary
      responses:
        '200':
          description: The added STIG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/stigs/{benchmarkId}':
    get:
      tags:
        - STIG
      summary: Return properties of the specified STIG
      operationId: getStigById
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: STIG response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    delete:
      tags:
        - STIG
      summary: Deletes a STIG (*** and all revisions ***)
      operationId: deleteStigById
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The deleted STIG
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/STIG'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/stigs/{benchmarkId}/assets':
    parameters:
      - $ref: '#/components/parameters/ElevateQuery'
      - $ref: '#/components/parameters/StigAssetProjectionQuery'
      - name: benchmarkId
        in: path
        description: A path parameter that indentifies a STIG
        required: true
        schema:
          type: string
    get:
      tags:
        - Asset
      summary: Return Assets that are targets of evaluation against a STIG
      operationId: getAssetsByBenchmarkId
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StigAssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package:read'
    put:
      tags:
        - Asset
      summary: Set the targets of evaluation against a STIG
      description: Invoking this endpoint will retain any previously configured Reviewer assignments 
      operationId: setStigAssetsByBenchmarkId
      requestBody:
        required: true
        x-name: body
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StigAssetProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:package'
  '/stigs/{benchmarkId}/revisions':
    get:
      tags:
        - STIG
      summary: Return a list of revisions for the specified STIG
      operationId: getRevisionsByBenchmarkId
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}':
    get:
      tags:
        - STIG
      summary: Return metadata for the specified revision of a STIG
      operationId: getRevisionByString
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Revision response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
    delete:
      tags:
        - STIG
      summary: Deletes the specified revision of a STIG
      operationId: deleteRevisionByString
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: The deleted Revision
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Revision'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig'
      x-rbac:
        - admin
  '/stigs/{benchmarkId}/revisions/{revisionStr}/groups':
    get:
      tags:
        - STIG
      summary: Return the list of groups for the specified revision of a STIG.
      operationId: getGroupsByRevision
      parameters:
        - $ref: '#/components/parameters/GroupProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/groups/{groupId}':
    get:
      tags:
        - STIG
      summary: 'Return the rules, checks and fixes for a Group from a specified revision of a STIG.'
      description: None
      operationId: getGroupByRevision
      parameters:
        - $ref: '#/components/parameters/GroupProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - name: groupId
          in: path
          description: A path parameter that indentifies a Group
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/rules':
    get:
      tags:
        - STIG
      summary: Return rule data for the specified revision of a STIG.
      operationId: getRulesByRevision
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/rules/{ruleId}':
    get:
      tags:
        - STIG
      summary: Return rule data for the specified Rule in a revision of a STIG.
      operationId: getRuleByRevision
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
        - name: ruleId
          in: path
          description: A path parameter that indentifies a Rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RuleDetailProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/rules/{ruleId}':
    get:
      tags:
        - STIG
      summary: Return the defintion and associated checks and fixes for the specified Rule
      operationId: getRuleByRuleId
      parameters:
        - $ref: '#/components/parameters/RuleProjectionQuery'
        - name: ruleId
          in: path
          description: A path parameter that indentifies a Rule
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rule response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleProjected'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/{benchmarkId}/revisions/{revisionStr}/ccis':
    get:
      tags:
        - STIG
      summary: Return a list of CCIs from a STIG revision
      operationId: getCcisByRevision
      parameters:
        - name: benchmarkId
          in: path
          description: A path parameter that indentifies a STIG
          required: true
          schema:
            type: string
        - name: revisionStr
          in: path
          description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
          required: true
          schema:
            pattern: ^(V\d+R\d+(\.\d+)?|latest)$
            type: string
      responses:
        '200':
          description: CCI response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CciListItem'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  '/stigs/ccis/{cci}':
    get:
      tags:
        - STIG
      summary: Return data for the specified CCI
      operationId: getCci
      parameters:
        - name: cci
          in: path
          description: A path parameter that indentifies a CCI
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CCI response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cci'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - oauth:
            - 'stig-manager:stig:read'
  /version:
    get:
      tags:
        - Version
      summary: Return version information
      operationId: getVersion
      responses:
        '200':
          description: Version response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiVersion'
components:
  schemas:
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ApiVersion:
      type: object
      properties:
        branch:
          type: string
        commit:
          type: string
        nearest-tag:
          type: string
    Package:
      type: object
      properties:
        packageId:
          readOnly: true
          type: integer
          nullable: false
        name:
          type: string
          nullable: false
        emassId:
          type: string
          nullable: true
        pocName:
          type: string
          nullable: true
        pocEmail:
          type: string
          nullable: true
        pocPhone:
          type: string
          nullable: true
        reqRar:
          type: boolean
          nullable: true
    PackageBasic:
      type: object
      properties:
        packageId:
          type: integer
        name:
          type: string
    PackageProjected:
      allOf:
        - $ref: '#/components/schemas/Package'
        - type: object
          properties:
            assets:
              type: array
              items:
                $ref: '#/components/schemas/AssetBasic'
            stigs:
              type: array
              items:
                $ref: '#/components/schemas/STIG'
    PackageCreateOrReplace:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/PackageUpdate'
    PackageUpdate:
      allOf:
        - $ref: '#/components/schemas/Package'
        - type: object
          properties:
            assetIds:
              type: array
              items:
                type: integer
    Asset:
      type: object
      properties:
        assetId:
          readOnly: true
          type: integer
        name:
          type: string
          nullable: false
        dept:
          type: string
          nullable: false
        ip:
          type: string
          nullable: true
        nonnetwork:
          type: boolean
          nullable: true
        scanexempt:
          type: boolean
          nullable: true
    AssetProjected:
      allOf:
        - $ref: '#/components/schemas/Asset'
        - type: object
          properties:
            adminStats:
              type: object
              properties:
                stigCount:
                  type: integer
                stigAssignedCount:
                  type: integer
            packages:
              type: array
              description: The Packages mapped to this Asset
              items:
                $ref: '#/components/schemas/PackageBasic'
            stigs:
              type: array
              description: The benchmarkIds of STIGs mapped to this Asset
              items:
                $ref: '#/components/schemas/STIG'
            stigReviewers:
              type: array
              description: The benchmarkIds of STIGs mapped to this Asset
              items:
                type: object
                properties:
                  benchmarkId:
                    type: string
                  reviewers:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserBasic'
    AssetBasic:
      type: object
      properties:
        assetId:
          type: integer
        name:
          type: string
        dept:
          type: string
    AssetCreateOrReplace:
      required:
        - name
      allOf:
        - $ref: '#/components/schemas/AssetUpdate'
    AssetUpdate:
      allOf:
        - $ref: '#/components/schemas/Asset'
        - type: object
          properties:
            packageIds:
              description: The packageIds mapped to this Asset
              type: array
              items:
                type: integer
            benchmarkIds:
              description: The benchmarkIds mapped to this Asset
              type: array
              items:
                type: string
            stigReviewers:
              description: The benchmarkIds and reviewers mapped to this Asset
              type: array
              items:
                type: object
                properties:
                  benchmarkId:
                    type:  string
                  userIds:
                    type: array
                    items:
                      type: integer
    UserRole:
      type: string
      enum:
        - IA Staff
        - IA Officer
        - IA Workforce
    User:
      type: object
      properties:
        userId:
          type: integer
          readOnly: true
        username:
          type: string
        display:
          type: string
        dept:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
        canAdmin:
          type: boolean
    UserCreateOrReplace:
      required:
        - username
        - displayName
        - role
      allOf:
        - $ref: '#/components/schemas/UserUpdate'
    UserUpdate:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            stigAssets:
              type: array
              items:
                $ref: '#/components/schemas/UserStigAssetSet'
    UserProjected:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            stigAssets:
              type: array
              items:
                $ref: '#/components/schemas/UserStigAssetGet'
    UserBasic:
      type: object
      properties:
        userId:
          type: integer
          readOnly: true
        username:
          type: string
    ReviewState:
      description: The Review state
      type: string
      enum:
        - O
        - NF
        - NA
    ReviewAction:
      type: string
      nullable: true
      enum:
        - Remediate
        - Mitigate
        - Exception
        - null
    ReviewStatus:
      type: string
      enum:
        - saved
        - submitted
        - approved
        - rejected
    ReviewPut:
      type: object
      required:
        - state
        - stateComment
      properties:
        assetId:
          type: integer
        ruleId:
          type: string
        state:
          $ref: '#/components/schemas/ReviewState'
        stateComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoState:
          type: boolean
          nullable: true
        status:
          $ref: '#/components/schemas/ReviewStatus'
    ReviewAssetRulePut:
      type: object
      required:
        - state
        - stateComment
      properties:
        state:
          $ref: '#/components/schemas/ReviewState'
        stateComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoState:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
    ReviewAssetRulePatch:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ReviewState'
        stateComment:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
          nullable: true
        autoState:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
    Review:
      type: object
      properties:
        reviewId:
          type: integer
          readOnly: true
        assetId:
          type: integer
        ruleId:
          type: string
        state:
          $ref: '#/components/schemas/ReviewState'
        stateComment:
          type: string
        autoState:
          type: boolean
        action:
          $ref: '#/components/schemas/ReviewAction'
        actionComment:
          type: string
        reqDoc:
          type: boolean
        status:
          $ref: '#/components/schemas/ReviewStatus'
        userId:
          type: integer
          readOnly: true
        ts:
          type: string
          readOnly: true
        rejectText:
          description: Ignored unless status='Rejected'
          type: string
        rejectUserId:
          type: integer
          readOnly: true
    ReviewProjected:
      allOf:
        - $ref: '#/components/schemas/Review'
        - type: object
          properties:
            history:
              type: array
              items:
                type: string
            asset:
              $ref: '#/components/schemas/AssetBasic'
            stigs:
              type: array
              items:
                type: string
            rule:
              $ref: '#/components/schemas/RuleAbbr'
    StigAssetProjected:
       allOf:
        - $ref: '#/components/schemas/AssetBasic'
        - type: object
          properties:
            reviewers:
              type: array
              items:
                $ref: '#/components/schemas/UserBasic'
    StigAsset:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/AssetBasic'
    UserStigAssetGet:
      type: object
      properties:
        benchmarkId:
          type: string
        asset:
          $ref: '#/components/schemas/AssetBasic'
    UserStigAssetSet:
      type: object
      properties:
        benchmarkId:
          type: string
        assetId:
          type: integer
    STIG:
      type: object
      properties:
        benchmarkId:
          type: string
        lastRevisionStr:
          type: string
        lastRevisionDate:
          type: string
        title:
          type: string
    Revision:
      type: object
      properties:
        benchmarkId:
          type: string
        revisionStr:
          type: string
        version:
          type: string
        release:
          type: string
        benchmarkDate:
          type: string
        status:
          type: string
        statusDate:
          type: string
        description:
          type: string
    Group:
      type: array
      items:
        type: object
        properties:
          groupId:
            type: string
          title:
            type: string
    GroupProjected:
      allOf:
        - $ref: '#/components/schemas/Group'
        - type: object
          properties:
            rules:
              type: array
              items:
                $ref: '#/components/schemas/RuleAbbr'
    Rule:
      type: object
      properties:
        ruleId:
          type: string
        groupId:
          type: string
        groupTitle:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
    RuleProjected:
      allOf:
        - $ref: '#/components/schemas/Rule'
        - type: object
          properties:
            weight:
              type: string
            vulnDiscussion:
              type: string
            falsePositives:
              type: string
            falseNegatives:
              type: string
            documentable:
              type: string
            mitigations:
              type: string
            securityOverrideGuidance:
              type: string
            potentialImpacts:
              type: string
            thirdPartyTools:
              type: string
            mitigationControl:
              type: string
            responsibility:
              type: string
    RuleDetailProjected:
      allOf:
        - $ref: '#/components/schemas/RuleProjected'
        - type: object
          properties:
            cci:
              type: array
              items:
                $ref: '#/components/schemas/CciRuleItem'
            checks:
              type: array
              items:
                $ref: '#/components/schemas/Check'
            fixes:
              type: array
              items:
                $ref: '#/components/schemas/Fix'
    RuleAbbr:
      type: object
      properties:
        ruleId:
          type: string
        version:
          type: string
        title:
          type: string
        severity:
          type: string
    Check:
      type: object
      properties:
        checkId:
          type: string
        content:
          type: string
    Fix:
      type: object
      properties:
        fixId:
          type: string
        text:
          type: string
    CciRuleItem:
      type: object
      properties:
        cci:
          type: string
        ap:
          description: eMASS Assessment Procedure
          type: string
        control:
          description: NIST 800-53r4 control
          type: string
    CciReferenceItem:
      type: object
      properties:
        creator:
          type: string
        title:
          type: string
        version:
          type: string
        location:
          type: string
        indexDisa:
          type: string
        textRefNist:
          type: string
        parentControl:
          type: string
    CciListItem:
      type: object
      properties:
        cci:
          type: string
        type:
          type: string
        references:
          type: array
          items:
            $ref: '#/components/schemas/CciReferenceItem'
    Cci:
      type: object
      properties:
        cci:
          type: string
        status:
          type: string
        publishdate:
          type: string
        contributor:
          type: string
        type:
          type: string
        defintion:
          type: string
        references:
          type: array
          items:
            $ref: '#/components/schemas/CciReferenceItem'
        current_revisions:
          type: array
          items:
            $ref: '#/components/schemas/Revision'
    ChecklistCkl:
      type: object
      description: The CKL format generated and read by DISA STIG VIewer
      xml:
        name: CHECKLIST
      properties:
        ASSET:
          type: object
          properties:
            ASSET_TYPE:
              type: string
            HOST_NAME:
              type: string
            HOST_IP:
              type: string
            HOST_MAC:
              type: string
            HOST_GUID:
              type: string
            HOST_FQDN:
              type: string
            TECH_AREA:
              type: string
            TARGET_KEY:
              type: string
        STIGS:
          type: object
          properties:
            iSTIG:
              type: object
              properties:
                STIG_INFO:
                  type: array
                  items:
                    type: object
                    properties:
                      SI_DATA:
                        type: object
                        properties:
                          SID_NAME:
                            type: string
                          SID_DATA:
                            type: string
                VULN:
                  type: array
                  items:
                    type: object
                    properties:
                      STIG_DATA:
                        type: array
                        items:
                          type: object
                          properties:
                            VULN_ATTRIBUTE:
                              type: string
                            ATTRIBUTE_DATA:
                              type: string
                      STATUS:
                        type: string
                        enum:
                          - Open
                          - NotAFinding
                          - Not_Applicable
                          - Not_Reviewed
                      FINDING_DETAILS:
                        type: string
                      COMMENTS:
                        type: string
                      SEVERITY_OVERRIDE:
                        type: string
                      SEVERITY_JUSTIFICATION:
                        type: string
  parameters:
    ElevateQuery:
      name: elevate
      in: query
      description: Elevate the user context for this request if user is permitted (canAdmin)
      schema:
        type: boolean
    PackageProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - assets
            - stigs
    AssetProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - packages
            - stigs
            - stigReviewers
            - adminStats
    ReviewProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - ruleInfo
            - history
            - stigs
            - packages
    ReviewStateQuery:
      name: state
      in: query
      schema:
        $ref: '#/components/schemas/ReviewState'
    ReviewStatusQuery:
      name: status
      in: query
      schema:
        $ref: '#/components/schemas/ReviewStatus'
    ReviewActionQuery:
      name: action
      in: query
      schema:
        $ref: '#/components/schemas/ReviewAction'
    StigAssetProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - reviewers
    UserProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - stigAssets
    UserRoleQuery:
      name: role
      in: query
      schema:
        $ref: '#/components/schemas/UserRole'
    BenchmarkIdPath:
      name: benchmarkId
      in: path
      description: A path parameter that indentifies a STIG
      required: true
      schema:
        type: string
    BenchmarkIdQuery:
      name: benchmarkId
      in: query
      description: A query parameter that indentifies a STIG
      schema:
        type: string
    GroupIdPath:
      name: groupId
      in: path
      description: A path parameter that indentifies a Group
      required: true
      schema:
        type: string
    GroupProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - rules
    RuleIdPath:
      name: ruleId
      in: path
      description: A path parameter that indentifies a Rule
      required: true
      schema:
        type: string
    RuleProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - details
            - cci
            - checks
            - fixes
    RulesProjectionQuery:
      name: projection
      in: query
      description: |
        Additional properties to include in the response.
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
          enum:
            - details
    CciPath:
      name: cci
      in: path
      description: A path parameter that indentifies a CCI
      required: true
      schema:
        type: string
    RevisionStrPath:
      name: revisionStr
      in: path
      description: 'A path parameter that indentifies a STIG revision [ V{version_num}R{release_num} | ''latest'' ]'
      required: true
      schema:
        pattern: ^(V\d+R\d+(\.\d+)?|latest)$
        type: string
    ChecklistProjectionQuery:
      name: projection
      in: query
      description: |
        Optional properties to return. Selecting "checks" or "fixes" will also select "fullrules"
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
          enum:
            - cci
            - fullrules
            - checks
            - fixes
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://192.168.1.155:8080/auth/realms/stigman/protocol/openid-connect/auth'
          scopes:
            stig-manager: Top-level scope
            'stig-manager:stig': Full access to the STIG collection
            'stig-manager:stig:read': Read access to the STIG collection
            'stig-manager:package': Full access to the Package collection
            'stig-manager:package:read': Read-only access to the Package collection
            'stig-manager:user': Full access to the Users collection
            'stig-manager:user:read': Read-only access to the Users collection
